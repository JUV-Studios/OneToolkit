import "Documentation.idl";

namespace OneToolkit.UI
{
	[OneToolkit.Metadata.Documentation.Summary("Defines a color in Hue / Saturation / Lightness (HSL) space.")]
	struct HslColor
	{
		[OneToolkit.Metadata.Documentation.Summary("The Hue in 0..360 range.")]
		Double H;

		[OneToolkit.Metadata.Documentation.Summary("The Saturation in 0..1 range.")]
		Double S;

		[OneToolkit.Metadata.Documentation.Summary("The Lightness in 0..1 range.")]
		Double L;

		[OneToolkit.Metadata.Documentation.Summary("The Alpha/opacity in 0..1 range.")]
		Double A;
	};

	[OneToolkit.Metadata.Documentation.Summary("Defines a color in Hue / Saturation / Value( HSV) space.")]
	struct HsvColor
	{
		[OneToolkit.Metadata.Documentation.Summary("The Hue in 0..360 range.")]
		Double H;

		[OneToolkit.Metadata.Documentation.Summary("The Saturation in 0..1 range.")]
		Double S;

		[OneToolkit.Metadata.Documentation.Summary("The Value in 0..1 range.")]
		Double V;

		[OneToolkit.Metadata.Documentation.Summary("The Alpha / opacity in 0..1 range.")]
		Double A;
	};

    [default_interface]
	static runtimeclass ColorHelper
	{
		static IMapView<String, Windows.UI.Color> PredefinedColors { get; };
		static Windows.UI.Color ToColor(String colorString);
		static String ToHex(Windows.UI.Color color);
		static Int32 ToInt(Windows.UI.Color color);
		static HslColor ToHsl(Windows.UI.Color color);
		static HsvColor ToHsv(Windows.UI.Color color);
		static Windows.UI.Color FromHsl(Double hue, Double saturation, Double lightness);
		static Windows.UI.Color FromHsl(Double hue, Double saturation, Double lightness, Double alpha);
		static Windows.UI.Color FromHsv(Double hue, Double saturation, Double value);
		static Windows.UI.Color FromHsv(Double hue, Double saturation, Double value, Double alpha);
    }
}